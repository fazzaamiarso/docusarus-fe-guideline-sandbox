"use strict";(self.webpackChunkwida_fe_docs_test=self.webpackChunkwida_fe_docs_test||[]).push([[986],{8001:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"coding-standard","title":"Coding Standards","description":"General Concepts","source":"@site/docs/coding-standard.md","sourceDirName":".","slug":"/coding-standard","permalink":"/docusarus-fe-guideline-sandbox/coding-standard","draft":false,"unlisted":false,"editUrl":"https://github.com/fazzaamiarso/docusarus-fe-guideline-sandbox/docs/coding-standard.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"sidebar_label":"Coding Standards","title":"Coding Standards"},"sidebar":"docs","previous":{"title":"Workflow","permalink":"/docusarus-fe-guideline-sandbox/workflow"},"next":{"title":"Best Practices","permalink":"/docusarus-fe-guideline-sandbox/best-practices"}}');var i=s(4848),t=s(8453);const o={sidebar_position:4,sidebar_label:"Coding Standards",title:"Coding Standards"},l=void 0,a={},d=[{value:"General Concepts",id:"general-concepts",level:2},{value:"Principles",id:"principles",level:3},{value:"Rule of Thumbs",id:"rule-of-thumbs",level:2},{value:"Use\xa0<strong>only very simple, explicit control flow</strong>\xa0for clarity.\xa0",id:"useonly-very-simple-explicit-control-flowfor-clarity",level:3},{value:"Dont neglect\xa0and address all compiler warnings",id:"dont-neglectand-address-all-compiler-warnings",level:3},{value:"Declare variables at the\xa0<strong>smallest possible scope</strong>",id:"declare-variables-at-thesmallest-possible-scope",level:3},{value:"Centralize Control Flow and Divide responsibility.",id:"centralize-control-flow-and-divide-responsibility",level:3},{value:"Split Compound conditions",id:"split-compound-conditions",level:3},{value:"All errors <strong>MUST</strong> be handled",id:"all-errors-must-be-handled",level:3},{value:"Naming Things",id:"naming-things",level:2},{value:"Do not abbreviate variable names",id:"do-not-abbreviate-variable-names",level:3},{value:"Add units or qualifiers to variable names",id:"add-units-or-qualifiers-to-variable-names",level:3},{value:"Callbacks go last in the list of parameters.",id:"callbacks-go-last-in-the-list-of-parameters",level:3},{value:"Naming convention",id:"naming-convention",level:3},{value:"Importing and Exporting",id:"importing-and-exporting",level:3},{value:"File import Ordering",id:"file-import-ordering",level:4},{value:"Absolute Import",id:"absolute-import",level:4}];function c(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"general-concepts",children:"General Concepts"}),"\n",(0,i.jsxs)(n.p,{children:["Code is ",(0,i.jsx)(n.strong,{children:"\u201cCommunication\u201d"}),". Always prioritize ",(0,i.jsx)(n.strong,{children:"Readability"})," and ",(0,i.jsx)(n.strong,{children:"Maintainability"}),". We are working on a team, so make sure others can easily understand your code."]}),"\n",(0,i.jsx)(n.h3,{id:"principles",children:"Principles"}),"\n",(0,i.jsxs)(n.p,{children:["Reference: ",(0,i.jsx)(n.a,{href:"https://www.linkedin.com/pulse/best-practices-writing-javascript-code-dry-kiss-yagni-emmanuel/",children:"https://www.linkedin.com/pulse/best-practices-writing-javascript-code-dry-kiss-yagni-emmanuel/"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"DRY"})," (",(0,i.jsx)(n.strong,{children:"Don\u2019t Repeat Yourself)"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"KISS (Keep It Stupid Simple)"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"YAGNI (You Aren\u2019t Gonna Need It)"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["(YAGNI) Don\u2019t do ",(0,i.jsx)(n.strong,{children:"premature optimization."})," Most modern Javascript frameworks already did a great job on optimizing your code, especially ",(0,i.jsx)(n.strong,{children:"React"}),". Optimize only when your app already has noticeable issues with performance like slowness. ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"Don\u2019t create a solution for a problem that doesn\u2019t exist yet."})})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"(DRY) Before coding something, try to search for existing implementations or solutions in the codebase and use or improve that instead of writing it from scratch."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"rule-of-thumbs",children:"Rule of Thumbs"}),"\n",(0,i.jsxs)(n.h3,{id:"useonly-very-simple-explicit-control-flowfor-clarity",children:["Use\xa0",(0,i.jsx)(n.strong,{children:"only very simple, explicit control flow"}),"\xa0for clarity.\xa0"]}),"\n",(0,i.jsx)(n.p,{children:"Do not use recursion\xa0to ensure that all executions that should be bounded are bounded."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// \u274c BAD: Complex conditional nesting\nfunction processUserData(user: User | null): string {\n  // Hard to follow nested conditions\n  if (user) {\n    if (user.roles) {\n      if (user.roles.length > 0) {\n        if (user.roles.includes('admin')) {\n          if (user.permissions) {\n            if (user.permissions.length > 0) {\n              return 'Valid admin user';\n            } else {\n              return 'Admin without permissions';\n            }\n          } else {\n            return 'Admin without permission array';\n          }\n        } else {\n          return 'Non-admin user';\n        }\n      } else {\n        return 'User without roles';\n      }\n    } else {\n      return 'User without roles array';\n    }\n  } else {\n    return 'No user provided';\n  }\n}\n\n// \u2705 GOOD: Refactored with clear control flow\nfunction processUserDataBetter(user: User | null): string {\n  if (!user) {\n    return 'No user provided';\n  }\n\n  if (!user.roles || user.roles.length === 0) {\n    return 'User without roles';\n  }\n\n  const isAdmin = user.roles.includes('admin');\n  if (!isAdmin) {\n    return 'Non-admin user';\n  }\n\n  if (!user.permissions || user.permissions.length === 0) {\n    return 'Admin without permissions';\n  }\n\n  return 'Valid admin user';\n}\n\nclass PermissionChecker {\n  // \u2705 GOOD: Clear early returns, explicit conditions\n  hasPermission(user: User, resource: string, action: string): boolean {\n    if (user.roles.includes('admin')) {\n      return true;\n    }\n\n    if (!user.permissions || user.permissions.length === 0) {\n      return false;\n    }\n\n    for (const permission of user.permissions) {\n      if (permission.resource === resource && \n          permission.action === action) {\n        return permission.allowed;\n      }\n    }\n\n    return false;\n  }\n"})}),"\n",(0,i.jsx)(n.h3,{id:"dont-neglectand-address-all-compiler-warnings",children:"Dont neglect\xa0and address all compiler warnings"}),"\n",(0,i.jsx)(n.p,{children:"common compiler errors are react compiler, eslint error, typescript compiler"}),"\n",(0,i.jsxs)(n.h3,{id:"declare-variables-at-thesmallest-possible-scope",children:["Declare variables at the\xa0",(0,i.jsx)(n.strong,{children:"smallest possible scope"})]}),"\n",(0,i.jsxs)(n.p,{children:["On top of that,\xa0",(0,i.jsx)(n.strong,{children:"minimize the number of variables in scope"}),", to reduce the probability that variables are misused"]}),"\n",(0,i.jsx)(n.h3,{id:"centralize-control-flow-and-divide-responsibility",children:"Centralize Control Flow and Divide responsibility."}),"\n",(0,i.jsx)(n.p,{children:'When splitting a large function, try to keep all switch/if statements in the "parent" function, and move non-branchy logic fragments to helper functions.'}),"\n",(0,i.jsxs)(n.p,{children:["All control flow should be handled by\xa0",(0,i.jsx)(n.em,{children:"one"}),"\xa0function, the rest shouldn't care about control flow at all. In other words,\xa0",(0,i.jsxs)(n.a,{href:"https://matklad.github.io/2023/11/15/push-ifs-up-and-fors-down.html",children:['"push\xa0',(0,i.jsx)(n.code,{children:"if"}),"s up and\xa0",(0,i.jsx)(n.code,{children:"for"}),'s down"']}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"\nfunction PostIssue (props) {\n    function renderServiceForm(serviceId: number) { \n        switch (serviceId):\n            case 1:\n                return <AirconForm/>\n            case 2:\n                return <PlumbingForm/>\n            default:\n                return null;\n        }\n    \nreturn <main>\n        <h1>Service Form</h1>\n        <form>\n            {renderServiceForm()}\n        </form>\n        <button>Submit</button>\n    </main>\n}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"type User = {\n    id: number;\n    name: string;\n    lastActive: Date;\n};\n\n// Helper function to determine if a user is active\nconst isUserActive = (lastActive: Date): boolean => {\n    const THRESHOLD_DAYS = 30;\n    const now = new Date();\n    const diffInDays = (now.getTime() - lastActive.getTime()) / (1000 * 60 * 60 * 24);\n    return diffInDays <= THRESHOLD_DAYS;\n};\n\n// Main function that handles control flow\nconst processUsers = (users: User[]): { active: User[]; inactive: User[] } => {\n    const activeUsers: User[] = [];\n    const inactiveUsers: User[] = [];\n\n    users.forEach((user) => {\n    if (isUserActive(user.lastActive)) {\n        activeUsers.push(user);\n    } else {\n        inactiveUsers.push(user);\n    }\n    });\n\n    return { active: activeUsers, inactive: inactiveUsers };\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"split-compound-conditions",children:"Split Compound conditions"}),"\n",(0,i.jsx)(n.p,{children:"Compound conditions that evaluate multiple booleans make it difficult for the reader to verify that all cases are handled."}),"\n",(0,i.jsxs)(n.p,{children:["Split into simple conditions using nested\xa0",(0,i.jsx)(n.code,{children:"if/else"}),"\xa0branches. Split complex\xa0",(0,i.jsx)(n.code,{children:"else if"}),"\xa0chains into\xa0",(0,i.jsx)(n.code,{children:"else { if { } }"}),"\xa0trees. This makes the branches and cases clear."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// X Complex compound conditions\nconst UserAccessControlBad: React.FC<UserData> = (props) => {\n    const handleAccess = () => {\n    // Hard to read and verify all cases are handled\n    if (props.isLoggedIn && props.hasSubscription && (props.isAdmin || props.isPremiumUser) && !props.hasPendingPayment) {\n        return <div>Full Access Granted</div>;\n    }\n    return <div>Access Denied</div>;\n    };\n\n    return handleAccess();\n};\n\n//  \u2705 Split conditions\nconst UserAccessControlGood: React.FC<UserData> = (props) => {\n    const handleAccess = () => {\n    if (!props.isLoggedIn) {\n        return <div>Please log in to access this content</div>;\n    }\n\n    if (!props.hasSubscription) {\n        return <div>Please subscribe to access this content</div>;\n    }\n\n    if (props.hasPendingPayment) {\n        return <div>Please resolve pending payment to continue</div>;\n    }\n\n    // Split user type check into its own condition\n    if (props.isAdmin || props.isPremiumUser) {\n        return <div>Full Access Granted</div>;\n    }  \n    \n    return <div>Regular User Access Only</div>;\n    };\n\n    return handleAccess();\n};\n"})}),"\n",(0,i.jsxs)(n.h3,{id:"all-errors-must-be-handled",children:["All errors ",(0,i.jsx)(n.strong,{children:"MUST"})," be handled"]}),"\n",(0,i.jsxs)(n.p,{children:["More details on ",(0,i.jsx)(n.strong,{children:"Error Handling"})," section. Some of the examples are:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Crash prevention"}),"\n",(0,i.jsxs)(n.li,{children:["For UI:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Empty states (No data after fetching from API)"}),"\n",(0,i.jsx)(n.li,{children:"Loading Error (Failed loading)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"naming-things",children:"Naming Things"}),"\n",(0,i.jsx)(n.h3,{id:"do-not-abbreviate-variable-names",children:"Do not abbreviate variable names"}),"\n",(0,i.jsxs)(n.p,{children:["Use proper capitalization for acronyms (",(0,i.jsx)(n.code,{children:"deeplinkURL"})," over ",(0,i.jsx)(n.code,{children:"deepLinkUrl"}),")"]}),"\n",(0,i.jsx)(n.h3,{id:"add-units-or-qualifiers-to-variable-names",children:"Add units or qualifiers to variable names"}),"\n",(0,i.jsx)(n.p,{children:"Put the units or qualifiers last, sorted by descending significance, this way the variable starts with the most significant word, and ends with the least significant word."}),"\n",(0,i.jsxs)(n.p,{children:["For example,\xa0",(0,i.jsx)(n.code,{children:"latency_ms_max"}),"\xa0rather than\xa0",(0,i.jsx)(n.code,{children:"max_latency_ms"}),". This will then line up nicely when\xa0",(0,i.jsx)(n.code,{children:"latency_ms_min"}),"\xa0is added, as well as group all variables that relate to latency."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"// Bad naming - inconsistent ordering of units and qualifiers\ninterface BadSalesMetrics {\ndailySalesUsd: number;\nusdMonthlySales: number;\nyearlyUsdSales: number;\nmaxItemsPerOrder: number;\nminOrderItems: number;\naverageOrderDurationMin: number;\n}\n\n// Good naming - consistent ordering with business concept first, then units/qualifiers\ninterface GoodSalesMetrics {\n// Sales amounts with currency and period\nsalesUsdDaily: number;\nsalesUsdMonthly: number;\nsalesUsdYearly: number;\n\n// Order statistics with units\norderItemsMax: number;\norderItemsMin: number;\norderItemsAvg: number;\norderDurationMinAvg: number;\n\n// Transaction counts by type\ntransactionsCashDaily: number;\ntransactionsCardDaily: number;\ntransactionsMobileDaily: number;\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"callbacks-go-last-in-the-list-of-parameters",children:"Callbacks go last in the list of parameters."}),"\n",(0,i.jsxs)(n.p,{children:["This mirrors control flow: callbacks are also\xa0",(0,i.jsx)(n.em,{children:"invoked"}),"\xa0last."]}),"\n",(0,i.jsxs)(n.p,{children:["You can see this pattern everywhere, ",(0,i.jsx)(n.code,{children:"addEventListener"})," , test runner ",(0,i.jsx)(n.code,{children:'it("", callback)'})]}),"\n",(0,i.jsx)(n.h3,{id:"naming-convention",children:"Naming convention"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{}),(0,i.jsx)(n.th,{})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"PascalCase"})}),(0,i.jsx)(n.td,{children:"React components, component file name, Interafaces and types"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"camelCase"})}),(0,i.jsx)(n.td,{children:"function, variables, method"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"UPPER_SNAKE_CASE"}),(0,i.jsx)(n.td,{children:"static constants (value that\u2019s unlikely to change)"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"importing-and-exporting",children:"Importing and Exporting"}),"\n",(0,i.jsx)(n.h4,{id:"file-import-ordering",children:"File import Ordering"}),"\n",(0,i.jsx)(n.p,{children:"Order for import would be"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Core Dependencies"}),"\n",(0,i.jsx)(n.li,{children:"3rd party libraries"}),"\n",(0,i.jsx)(n.li,{children:"Our Internal stuff"}),"\n",(0,i.jsx)(n.li,{children:"Relative imports"}),"\n",(0,i.jsx)(n.li,{children:"Assets"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'// 1\ufe0f\u20e3 React and Core Dependencies\nimport React, { useState, useEffect } from "react";\n\n// 2\ufe0f\u20e3 Third-Party Libraries\nimport axios from "axios";\nimport { format } from "date-fns";\n\n// 3\ufe0f\u20e3 Absolute Imports (Aliased Imports, Utilities, Constants)\nimport { API_URL } from "@/config";\nimport { useAuth } from "@/context/AuthContext";\nimport { formatCurrency } from "@/utils/formatters";\n\n// 4\ufe0f\u20e3 Relative Imports (Project Modules)\nimport DashboardCard from "../components/DashboardCard";\nimport useFetchData from "../hooks/useFetchData";\n\n// 5\ufe0f\u20e3 Styles and Assets\nimport "../styles/dashboard.css";\nimport dashboardIcon from "../assets/dashboard-icon.svg";\n'})}),"\n",(0,i.jsx)(n.h4,{id:"absolute-import",children:"Absolute Import"}),"\n",(0,i.jsx)(n.p,{children:"Use absolute import file path when importing files. This make it easier for us to move things around compare to relative import."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@/*"}),"  \u2192 Should be reserved for external libraries or dependencies like ",(0,i.jsx)(n.code,{children:"@stripe/*"})," , ",(0,i.jsx)(n.code,{children:"@lit/lit-element"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"#/*"})," \u2192 For modules that we own or created"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var r=s(6540);const i={},t=r.createContext(i);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);