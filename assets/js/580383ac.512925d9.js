"use strict";(self.webpackChunkwida_fe_docs_test=self.webpackChunkwida_fe_docs_test||[]).push([[816],{3006:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"performance-optimization","title":"Performance Optimization","description":"Optimize image with lazy loading technique","source":"@site/docs/performance-optimization.md","sourceDirName":".","slug":"/performance-optimization","permalink":"/docusarus-fe-guideline-sandbox/performance-optimization","draft":false,"unlisted":false,"editUrl":"https://github.com/fazzaamiarso/docusarus-fe-guideline-sandbox/docs/performance-optimization.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9,"sidebar_label":"Performance Optimization","title":"Performance Optimization"},"sidebar":"default","previous":{"title":"State Management","permalink":"/docusarus-fe-guideline-sandbox/state-management"},"next":{"title":"Best Practices","permalink":"/docusarus-fe-guideline-sandbox/best-practices"}}');var i=s(4848),r=s(8453);const o={sidebar_position:9,sidebar_label:"Performance Optimization",title:"Performance Optimization"},a=void 0,l={},c=[{value:"Optimize image with lazy loading technique",id:"optimize-image-with-lazy-loading-technique",level:3},{value:"Lazy import components.",id:"lazy-import-components",level:3},{value:"Prefetch data for faster loading",id:"prefetch-data-for-faster-loading",level:3},{value:"Optimize Cache Stale time",id:"optimize-cache-stale-time",level:4}];function d(e){const n={a:"a",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"optimize-image-with-lazy-loading-technique",children:"Optimize image with lazy loading technique"}),"\n",(0,i.jsxs)(n.p,{children:["Our browsers actually have lazy loading built-in, but for maximum compability we will use library ",(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/react-lazy-load-image-component",children:(0,i.jsx)(n.code,{children:"react-lazy-load-image-component"})})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/react-lazy-load-image-component",children:"Important note:"})," for image that is \u201cabove the fold\u201d don\u2019t lazyload because we want it to load ASAP. For example, Hero Image."]}),"\n",(0,i.jsx)(n.h3,{id:"lazy-import-components",children:"Lazy import components."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import React, { Suspense, lazy, useState } from 'react';\n\n// Lazy load multiple components\nconst LazyComponentA = lazy(() => import('./LazyComponentA'));\nconst LazyComponentB = lazy(() => import('./LazyComponentB'));\nconst LazyComponentC = lazy(() => import('./LazyComponentC'));\n\nconst App = () => {\n    const [showComponent, setShowComponent] = useState({\n    A: false,\n    B: false,\n    C: false,\n    });\n\n    const toggleComponent = (component) => {\n    setShowComponent((prev) => ({\n        ...prev,\n        [component]: !prev[component],\n    }));\n    };\n\n    return (\n    <div>\n        <h1>Lazy Loading Multiple Components</h1>\n\n        <button onClick={() => toggleComponent('A')}>\n        Toggle Component A\n        </button>\n        <button onClick={() => toggleComponent('B')}>\n        Toggle Component B\n        </button>\n        <button onClick={() => toggleComponent('C')}>\n        Toggle Component C\n        </button>\n\n        <Suspense fallback={<div>Loading...</div>}>\n        {showComponent.A && <LazyComponentA />}\n        {showComponent.B && <LazyComponentB />}\n        {showComponent.C && <LazyComponentC />}\n        </Suspense>\n    </div>\n    );\n};\n\nexport default App;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"prefetch-data-for-faster-loading",children:"Prefetch data for faster loading"}),"\n",(0,i.jsxs)(n.p,{children:["Since we use ",(0,i.jsx)(n.code,{children:"tanstack-query"})," . If we predict that user will go to certain page, we can prefetch it."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"1. Prefetching on Hover or Interaction"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Case"}),": When a user hovers over a button, link, or component that will likely\ntrigger a data fetch (e.g., navigating to a new page or opening a\nmodal)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Why It\u2019s Useful"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Reduces loading time when the user actually performs the action (e.g., clicking the button)."}),"\n",(0,i.jsx)(n.li,{children:"Makes the app feel faster and more responsive."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'Prefetch user profile data when the user hovers over a "View Profile" button.'}),"\n",(0,i.jsx)(n.li,{children:"Prefetch product details when the user hovers over a product card in an e-commerce app."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"2. Prefetching on Route Change (Next Page)"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Case"}),": When the user is likely to navigate to a new page or route (e.g., clicking a link or button that leads to another page)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Why It\u2019s Useful"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ensures the data for the next page is already loaded by the time the user navigates to it."}),"\n",(0,i.jsx)(n.li,{children:"Eliminates loading spinners or delays during navigation."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'Prefetch blog post data when the user clicks a "Read More" link.'}),"\n",(0,i.jsx)(n.li,{children:'Prefetch dashboard data when the user clicks a "Go to Dashboard" button.'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"3. Prefetching for Anticipated User Actions"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Case"}),": When you can predict the user\u2019s next action based on their current behavior or app flow."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Why It\u2019s Useful"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Proactively loads data that the user is likely to need soon, improving perceived performance."}),"\n",(0,i.jsx)(n.li,{children:"Works well for apps with predictable user flows (e.g., onboarding, step-by-step forms, or guided workflows)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Prefetch the next step\u2019s data in a multi-step form while the user is filling out the current step."}),"\n",(0,i.jsx)(n.li,{children:"Prefetch search results as the user types in a search bar (e.g., after a short delay)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"optimize-cache-stale-time",children:"Optimize Cache Stale time"}),"\n",(0,i.jsx)(n.p,{children:"For things that we get from API that\u2019s unlikely to change on that user session, we should cache it for a long time. For example, list of services that we have, list of currencies that we support."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"1. Frequent Data Updates (e.g., Real-Time Dashboards)"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Scenario"}),": In applications like real-time dashboards, stock market trackers, or live sports scores, data changes frequently."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Why Adjust?"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Set a ",(0,i.jsxs)(n.strong,{children:["low ",(0,i.jsx)(n.code,{children:"staleTime"})]})," (e.g., ",(0,i.jsx)(n.code,{children:"0"})," or a few seconds) to ensure the data is always fresh and up-to-date."]}),"\n",(0,i.jsxs)(n.li,{children:["Use a ",(0,i.jsxs)(n.strong,{children:["short ",(0,i.jsx)(n.code,{children:"cacheTime"})]})," to avoid storing outdated data in the cache."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"useQuery({\n    queryKey: ['live-scores'],\n    queryFn: fetchLiveScores,\n    staleTime: 1000 * 5, // 5 seconds\n    cacheTime: 1000 * 10, // 10 seconds\n});\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"2. Infrequently Accessed Data (e.g., Archived or Historical Data)"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Scenario"}),": For data that is rarely accessed, such as archived records, old reports, or historical data."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Why Adjust?"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Set a ",(0,i.jsxs)(n.strong,{children:["long ",(0,i.jsx)(n.code,{children:"staleTime"})]})," to avoid refetching data unnecessarily."]}),"\n",(0,i.jsxs)(n.li,{children:["Use a ",(0,i.jsxs)(n.strong,{children:["long ",(0,i.jsx)(n.code,{children:"cacheTime"})]})," to keep the data in the cache for future use without refetching."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"useQuery({\n    queryKey: ['archived-reports'],\n    queryFn: fetchArchivedReports,\n    staleTime: 1000 * 60 * 60, // 1 hour\n    cacheTime: 1000 * 60 * 60 * 24, // 1 day\n});\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"3. Memory Optimization in Large-Scale Apps"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Scenario"}),": In large-scale applications with many queries, memory usage can become\nan issue if unused data is kept in the cache for too long."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Why Adjust?"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Enable ",(0,i.jsx)(n.strong,{children:"garbage collection"})," by setting a ",(0,i.jsxs)(n.strong,{children:["short ",(0,i.jsx)(n.code,{children:"cacheTime"})]})," for queries that are no longer active."]}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"cacheTime"})," to automatically remove unused data from the cache after a certain period."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"useQuery({\n    queryKey: ['user-sessions'],\n    queryFn: fetchUserSessions,\n    cacheTime: 1000 * 60 * 5, // 5 minutes (garbage collect after 5 minutes of inactivity)\n});\n"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(6540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);